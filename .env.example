# AutoReportAI Environment Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL database URL
# Format: postgresql://username:password@host:port/database
# For production, use a strong password and consider connection pooling
DATABASE_URL=postgresql://autoreport_user:CHANGE_THIS_PASSWORD@localhost:5432/autoreport_db

# =============================================================================
# REDIS CONFIGURATION (for rate limiting and caching)
# =============================================================================

# Redis URL for rate limiting and session storage
REDIS_URL=redis://localhost:6379

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# JWT Secret Key - CRITICAL: Generate a strong random key for production
# Generate with: openssl rand -hex 32
SECRET_KEY=CHANGE_THIS_TO_A_RANDOM_64_CHARACTER_HEX_STRING

# JWT Token expiration (in minutes)
ACCESS_TOKEN_EXPIRE_MINUTES=480

# Encryption key for sensitive data (API keys, passwords)
# Generate with: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
ENCRYPTION_KEY=CHANGE_THIS_TO_A_FERNET_GENERATED_KEY

# =============================================================================
# EMAIL CONFIGURATION (for notifications and reports)
# =============================================================================

# SMTP server settings
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASSWORD=your-app-password

# Email sender information
EMAILS_FROM_EMAIL=noreply@yourdomain.com
EMAILS_FROM_NAME=AutoReportAI

# =============================================================================
# AI SERVICE CONFIGURATION
# =============================================================================

# Service URLs for AI and other microservices
AI_SERVICE_URL=http://localhost:8000/api/v1/ai

# =============================================================================
# FRONTEND CONFIGURATION
# =============================================================================

# Next.js public URL (used for CORS and redirects)
NEXT_PUBLIC_APP_URL=https://yourdomain.com

# API base URL for frontend
NEXT_PUBLIC_API_URL=https://api.yourdomain.com

# =============================================================================
# PRODUCTION DEPLOYMENT SETTINGS
# =============================================================================

# Environment (development, staging, production)
NODE_ENV=production

# Application port
PORT=8000

# Domain configuration
DOMAIN=yourdomain.com

# =============================================================================
# LOGGING AND MONITORING
# =============================================================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# PostgreSQL Docker settings
POSTGRES_USER=autoreport_user
POSTGRES_PASSWORD=CHANGE_THIS_PASSWORD
POSTGRES_DB=autoreport_db

# =============================================================================
# IMPORTANT SECURITY NOTES:
# =============================================================================
# 1. Never commit .env files to version control
# 2. Use strong, unique passwords for all services
# 3. Generate new SECRET_KEY and ENCRYPTION_KEY for each environment
# 4. Regularly rotate passwords and keys
# 5. Use environment-specific configurations
# 6. Enable SSL/TLS in production
# 7. Implement proper backup strategies
# 8. Monitor logs for security events
# 9. Keep dependencies updated
# 10. Use firewalls and network segmentation
