# AutoReportAI Pre-commit 钩子配置
# 自动运行代码质量检查和格式化

repos:
  # Python代码格式化和检查
  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        language_version: python3
        files: ^(backend/|tests/).*\.py$

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ["--profile", "black"]
        files: ^(backend/|tests/).*\.py$

  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        files: ^(backend/|tests/).*\.py$
        args:
          - --max-line-length=88
          - --extend-ignore=E203,W503
          - --exclude=backend/venv,backend/migrations/versions

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.1
    hooks:
      - id: mypy
        files: ^backend/app/.*\.py$
        additional_dependencies: [types-redis, types-requests]
        args:
          - --ignore-missing-imports
          - --disable-error-code=import

  # 安全检查
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ["-r", "backend/app", "-f", "json"]
        files: ^backend/app/.*\.py$

  # 通用文件检查
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        exclude: \.(md|rst)$
      - id: end-of-file-fixer
        exclude: \.(md|rst)$
      - id: check-yaml
        files: \.(yaml|yml)$
      - id: check-json
        files: \.json$
      - id: check-toml
        files: \.toml$
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: debug-statements
        files: ^(backend/|tests/).*\.py$

  # Docker文件检查
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        files: Dockerfile.*

  # 前端代码检查 (如果有的话)
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.47.0
    hooks:
      - id: eslint
        files: ^frontend/.*\.(js|jsx|ts|tsx)$
        additional_dependencies:
          - eslint@8.47.0
          - "@typescript-eslint/eslint-plugin"
          - "@typescript-eslint/parser"
        args: ["--fix"]

  # Jupyter Notebook清理
  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.7.0
    hooks:
      - id: nbqa-black
        files: \.ipynb$
      - id: nbqa-isort
        files: \.ipynb$

  # 提交消息格式检查
  - repo: https://github.com/commitizen-tools/commitizen
    rev: 3.6.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # 密钥和敏感信息检查
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: package.lock.json

# 本地钩子
  - repo: local
    hooks:
      # 运行快速测试
      - id: run-tests
        name: Run unit tests
        entry: python3 run_tests.py --unit
        language: system
        pass_filenames: false
        stages: [push]

      # 检查覆盖率
      - id: coverage-check
        name: Check test coverage
        entry: python3 run_tests.py --coverage --no-html
        language: system
        pass_filenames: false
        stages: [push]

      # 生成测试报告
      - id: test-report
        name: Generate test report
        entry: bash -c "python3 run_tests.py --unit --integration --coverage && echo 'Tests passed!'"
        language: system
        pass_filenames: false
        stages: [manual]

# 全局配置
default_stages: [commit, push]
fail_fast: false

# CI配置
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false