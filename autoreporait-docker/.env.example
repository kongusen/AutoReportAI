# ================================================
# AutoReportAI 统一环境配置 - 适配新 DDD 架构
# ================================================

# 项目基础配置
COMPOSE_PROJECT_NAME=autoreport
TIMEZONE=Asia/Shanghai

# ================================================
# 基础设施配置
# ================================================

# Database Configuration
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=autoreport
POSTGRES_HOST=db
POSTGRES_PORT=5432
DATABASE_URL=postgresql://postgres:postgres@db:5432/autoreport

# Redis Configuration  
REDIS_PORT=6379
REDIS_URL=redis://redis:6379/0
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0

# ================================================
# 应用配置
# ================================================

# Backend Configuration
BACKEND_PORT=8000
API_WORKERS=2
ENVIRONMENT=development
DEBUG=true
LOG_LEVEL=INFO
# 安全密钥配置 (生产环境必须更改!)
SECRET_KEY=dev-secret-key-change-in-production-please-make-it-secure
# 加密密钥必须是32字节的 URL-safe base64 编码字符串
# 生成新密钥: python3 -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
ENCRYPTION_KEY=hq_C1FsaCYJbHEypbaef1BLEt53-SzEIuJXdazjsA2w=

# 默认管理员配置
FIRST_SUPERUSER=admin
FIRST_SUPERUSER_EMAIL=admin@autoreport.local
FIRST_SUPERUSER_PASSWORD=admin123

# CORS Configuration
CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# ================================================
# AI/LLM 配置 - 新架构 LlamaIndex 集成
# ================================================

# Primary AI Provider (支持任何OpenAI兼容的服务)
PRIMARY_AI_PROVIDER=your_ai_provider
PRIMARY_AI_API_KEY=sk-your-openai-api-key-here
PRIMARY_AI_BASE_URL=https://your-ai-api-endpoint/v1
PRIMARY_AI_MODEL=gpt-4o-mini

# Backup AI Provider (OpenAI)
AI_PROVIDER=openai
OPENAI_API_KEY=sk-your-openai-key-here
OPENAI_MODEL=gpt-4

# LlamaIndex 缓存配置
LLAMAINDEX_CACHE_DIR=/app/cache/llamaindex
TRANSFORMERS_CACHE=/app/cache/transformers
HF_HOME=/app/cache/huggingface

# File Storage Configuration
MAX_FILE_SIZE=10485760

# API Configuration
API_BASE_URL=http://localhost:8000
API_RATE_LIMIT=1000

# Email Configuration (optional)
SMTP_SERVER=
SMTP_PORT=587
SMTP_USERNAME=
SMTP_PASSWORD=
ENABLE_EMAIL_NOTIFICATIONS=false

# MinIO Configuration (optional)
MINIO_ENDPOINT=
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin
MINIO_BUCKET_NAME=autoreport
MINIO_PORT=9000
MINIO_CONSOLE_PORT=9001
FORCE_LOCAL_STORAGE=true

# Monitoring Configuration
ENABLE_MONITORING=true

# Frontend Configuration
FRONTEND_PORT=3000
NEXT_PUBLIC_API_URL=http://localhost:8000/api/v1
NEXT_PUBLIC_WS_URL=ws://localhost:8000/ws
NEXT_PUBLIC_APP_NAME=AutoReportAI
NEXT_PUBLIC_APP_VERSION=1.0.0

# ================================================
# 任务队列配置 - 适配新架构工作流
# ================================================

# Celery Configuration
CELERY_QUEUES=celery,report_tasks,analysis_tasks,query_tasks,generation_tasks,ai_tasks
CELERY_CONCURRENCY=6
CELERY_MAX_TASKS=200
CELERY_PREFETCH_MULTIPLIER=2

# 工作流配置
WORKFLOW_MAX_RETRIES=3
WORKFLOW_TIMEOUT_SECONDS=300
INTELLIGENT_PLACEHOLDER_ENABLED=true

# ================================================
# DDD 架构层配置
# ================================================

# Application Layer
APPLICATION_WORKFLOW_ENABLED=true
TWO_PHASE_PIPELINE_ENABLED=true

# Domain Layer
INTELLIGENT_TEMPLATE_SERVICE_ENABLED=true
PLACEHOLDER_ANALYSIS_ENABLED=true

# Infrastructure Layer
UNIFIED_CACHE_ENABLED=true
CACHE_TTL_HOURS=24
STORAGE_BACKEND=local

# Data Layer
SCHEMA_AUTO_DISCOVERY=true
DATA_SOURCE_VALIDATION=true

# Flower Monitoring (optional)
FLOWER_PORT=5555
FLOWER_BASIC_AUTH=admin:password

# Logging Configuration
LOG_LEVEL=INFO

# 时区配置
TIMEZONE=Asia/Shanghai

# ================================================
# 资源限制配置 - 针对 AI/ML 工作负载优化
# ================================================

# Database Resources
DB_MAX_CPUS=1.0
DB_MAX_MEMORY=1G
DB_MIN_MEMORY=512M

# Redis Resources
REDIS_MAX_CPUS=0.5
REDIS_MAX_MEMORY=512M
REDIS_MIN_MEMORY=256M

# Backend Resources (增强以支持AI工作负载)
BACKEND_MAX_CPUS=2.0
BACKEND_MAX_MEMORY=2G
BACKEND_MIN_MEMORY=1G

# Frontend Resources
FRONTEND_MAX_CPUS=1.0
FRONTEND_MAX_MEMORY=1G
FRONTEND_MIN_MEMORY=512M

# 代理配置（如果需要）
# 构建时代理设置 - 用于Docker构建过程中的网络访问
BUILD_HTTP_PROXY=
BUILD_HTTPS_PROXY=
BUILD_NO_PROXY=localhost,127.0.0.1

# 示例配置（根据你的代理服务器修改）:
# BUILD_HTTP_PROXY=http://your-proxy-server:port
# BUILD_HTTPS_PROXY=http://your-proxy-server:port
# BUILD_NO_PROXY=localhost,127.0.0.1,*.local