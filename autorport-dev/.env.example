# ==========================================
# AutoReportAI 开发环境配置文件
# React Agent Architecture - 开发环境简化配置
# 
# 使用说明：
# 1. 复制此文件为 .env: cp .env.example .env
# 2. (可选) 修改LLM API密钥
# 3. 运行: ./start.sh 选择完整环境
# ==========================================

# ==========================================
# 基础环境设置
# ==========================================
NODE_ENV=development
ENVIRONMENT=development
DEBUG=true
LOG_LEVEL=DEBUG
DOCKER_ENV=true

# 项目信息
PROJECT_NAME=AutoReportAI
API_V1_STR=/api/v1

# ==========================================
# 服务端口配置
# ==========================================
# 服务器IP地址 (用于前端访问，可选)
SERVER_IP=localhost

# 后端API服务端口
PORT=8000
HOST=0.0.0.0

# 前端服务端口
FRONTEND_PORT=3000

# WebSocket配置
WS_HOST=0.0.0.0
WS_PORT=8000

# ==========================================
# 数据库配置 (PostgreSQL) - 开发环境简化
# ==========================================
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres123
POSTGRES_DB=autoreport
POSTGRES_HOST=db
POSTGRES_PORT=5432

# 完整数据库URL (会自动生成)
DATABASE_URL=postgresql://postgres:postgres123@db:5432/autoreport

# 测试数据库配置
TEST_POSTGRES_USER=testuser
TEST_POSTGRES_PASSWORD=testpass123
TEST_POSTGRES_HOST=localhost
TEST_POSTGRES_PORT=5433
TEST_POSTGRES_DB=test_autoreport

# ==========================================
# Redis配置 - 开发环境简化 (避免端口冲突)
# ==========================================
REDIS_HOST=redis
REDIS_PORT=6380
REDIS_PASSWORD=
REDIS_DB=0

# 完整Redis URL (会自动生成)
REDIS_URL=redis://redis:6380/0

# ==========================================
# 安全配置 - 开发环境简化
# ==========================================
# JWT密钥 - 开发环境默认值
SECRET_KEY=dev-secret-key-change-in-production
ACCESS_TOKEN_EXPIRE_MINUTES=60
ALGORITHM=HS256

# 加密密钥 - 32字节URL安全base64编码 (Fernet标准)
ENCRYPTION_KEY=ixd0gr5Ntuy8PSOOJsFl4DY1R2fFgFVc34_vu4Yzr1c=

# ==========================================
# Celery 任务队列配置
# ==========================================
CELERY_BROKER_URL=redis://redis:6380/1
CELERY_RESULT_BACKEND=redis://redis:6380/1
CELERY_TASK_SERIALIZER=json
CELERY_RESULT_SERIALIZER=json

# ==========================================
# 时区配置
# ==========================================
# 系统时区 - Docker容器系统级时区
TZ=Asia/Shanghai
TIMEZONE=Asia/Shanghai

# 应用时区 - 用于前端显示和业务逻辑
APP_TIMEZONE=Asia/Shanghai

# Celery时区配置
CELERY_TIMEZONE=Asia/Shanghai

# ==========================================
# 前端配置
# ==========================================
# API端点 - 前端使用 (开发环境默认配置)
NEXT_PUBLIC_API_URL=http://localhost:8000/api/v1
NEXT_PUBLIC_WS_URL=ws://localhost:8000/ws
# 或使用服务器IP (局域网访问)
# NEXT_PUBLIC_API_URL=http://${SERVER_IP:-localhost}:8000/api/v1
# NEXT_PUBLIC_WS_URL=ws://${SERVER_IP:-localhost}:8000/ws

# Next.js配置
NEXT_TELEMETRY_DISABLED=1

# 前端时区配置
NEXT_PUBLIC_APP_TIMEZONE=Asia/Shanghai

# ==========================================
# 邮件服务配置 (开发环境可选)
# ==========================================
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password
SMTP_USE_TLS=true
SENDER_EMAIL=noreply@autoreportai.com
SENDER_NAME=AutoReportAI

# Legacy email settings
SMTP_HOST=smtp.gmail.com
SMTP_USER=your-email@gmail.com
EMAILS_FROM_EMAIL=noreply@autoreportai.com
EMAILS_FROM_NAME=AutoReportAI

# ==========================================
# 通知设置 - 开发环境
# ==========================================
ENABLE_EMAIL_NOTIFICATIONS=false
ENABLE_WEBSOCKET_NOTIFICATIONS=true
ENABLE_REDIS_NOTIFICATIONS=true

# ==========================================
# React Agent 系统配置 - 核心架构
# ==========================================
# React Agent核心配置
REACT_AGENT_ENABLED=true
REACT_AGENT_MAX_ITERATIONS=20
REACT_AGENT_TIMEOUT=300
REACT_AGENT_VERBOSE=true
REACT_AGENT_DEBUG_STEPS=true
REACT_AGENT_CACHE_ENABLED=true
REACT_AGENT_CACHE_TTL=3600
REACT_AGENT_WORKER_MODE=false
REACT_AGENT_MONITORING=true
REACT_AGENT_METRICS=true

# React Agent架构特定配置
REACT_AGENT_ARCHITECTURE=enabled
INTELLIGENT_PLACEHOLDER_SERVICE=enabled
NOTIFICATION_SERVICE=react_agent
FILE_STORAGE_SERVICE=modern
TEMPLATE_SERVICE=react_agent

# LLM集成配置
DEFAULT_LLM_PROVIDER=openai
LLM_TEMPERATURE=0.1
LLM_MAX_TOKENS=4096
LLM_TOP_P=0.9

# ==========================================
# LlamaIndex 配置 - React Agent核心引擎
# ==========================================
# LlamaIndex基础配置 - React Agent依赖 (更新为本地目录)
LLAMAINDEX_CACHE_DIR=./data/backend/cache/llamaindex
LLAMAINDEX_ENABLE_CACHE=true
LLAMAINDEX_DEBUG=true
LLAMAINDEX_CHUNK_SIZE=1024
LLAMAINDEX_CHUNK_OVERLAP=200

# React Agent向量存储
EMBEDDING_MODEL=text-embedding-ada-002
EMBEDDING_DIMENSION=1536
EMBEDDING_BATCH_SIZE=100
VECTOR_STORE_TYPE=simple
VECTOR_STORE_PERSIST_DIR=./data/backend/storage/vector_index

# React Agent特定缓存
REACT_AGENT_VECTOR_CACHE=./data/backend/cache/react_agent
REACT_AGENT_EMBEDDING_CACHE=./data/backend/cache/embeddings

# ==========================================
# Function Tools 配置
# ==========================================
# 工具注册配置
FUNCTION_TOOLS_REGISTRY_SIZE=200
FUNCTION_TOOLS_TIMEOUT=60
FUNCTION_TOOLS_RETRY_COUNT=3

# 工具类别启用配置
ENABLE_TEMPLATE_TOOLS=true
ENABLE_DATA_TOOLS=true
ENABLE_REPORT_TOOLS=true
ENABLE_ANALYSIS_TOOLS=true
ENABLE_SYSTEM_TOOLS=true

# 自定义工具配置
CUSTOM_TOOLS_DIR=./data/backend/storage/tools/custom
PLUGIN_TOOLS_ENABLED=true

# ==========================================
# DDD 架构配置
# ==========================================
# Application层配置
APPLICATION_LAYER_ENABLED=true
APPLICATION_AGENTS_ENABLED=true
APPLICATION_ORCHESTRATION_ENABLED=true

# Domain层配置
DOMAIN_LAYER_ENABLED=true
DOMAIN_AGENTS_ENABLED=true
DOMAIN_SERVICES_ENABLED=true

# Infrastructure层配置
INFRASTRUCTURE_LAYER_ENABLED=true
INFRASTRUCTURE_AGENTS_ENABLED=true
INFRASTRUCTURE_CONNECTORS_ENABLED=true

# ==========================================
# 数据源连接器配置
# ==========================================
# SQL数据库连接器
SQL_CONNECTOR_TIMEOUT=30
SQL_CONNECTOR_RETRY_COUNT=3
SQL_CONNECTOR_POOL_SIZE=10

# Doris连接器
DORIS_CONNECTOR_TIMEOUT=60
DORIS_CONNECTOR_RETRY_COUNT=3
DORIS_FE_HTTP_PORT=8030
DORIS_QUERY_PORT=9030

# API连接器
API_CONNECTOR_TIMEOUT=30
API_CONNECTOR_RETRY_COUNT=3
API_CONNECTOR_RATE_LIMIT=100

# CSV连接器
CSV_CONNECTOR_MAX_FILE_SIZE=100MB
CSV_CONNECTOR_ENCODING=utf-8
CSV_CONNECTOR_DELIMITER=,

# ==========================================
# 缓存系统配置
# ==========================================
# 统一缓存配置
CACHE_SYSTEM_ENABLED=true
CACHE_DEFAULT_TTL=3600
CACHE_MAX_SIZE=1000

# Context缓存配置
CONTEXT_CACHE_ENABLED=true
CONTEXT_CACHE_TTL=1800
CONTEXT_CACHE_MAX_SIZE=500

# 执行缓存配置
EXECUTION_CACHE_ENABLED=true
EXECUTION_CACHE_TTL=7200
EXECUTION_CACHE_MAX_SIZE=200

# 结果缓存配置
RESULT_CACHE_ENABLED=true
RESULT_CACHE_TTL=86400
RESULT_CACHE_MAX_SIZE=100

# ==========================================
# 实时系统配置
# ==========================================
# WebSocket配置
WEBSOCKET_ENABLED=true
WEBSOCKET_MAX_CONNECTIONS=1000
WEBSOCKET_HEARTBEAT_INTERVAL=30
WEBSOCKET_MESSAGE_QUEUE_SIZE=100

# 实时数据处理
REALTIME_DATA_ENABLED=true
REALTIME_NOTIFICATION_ENABLED=true
REALTIME_STREAM_BUFFER_SIZE=1000

# ==========================================
# 本地数据目录配置 - 基于bind mount
# ==========================================
# 数据根目录 (所有容器数据挂载到当前目录下)
DATA_ROOT_DIR=./data

# 核心数据目录
POSTGRES_DATA_DIR=./data/postgres
REDIS_DATA_DIR=./data/redis

# 后端数据目录
BACKEND_LOGS_DIR=./data/backend/logs
BACKEND_UPLOADS_DIR=./data/backend/uploads
BACKEND_CACHE_DIR=./data/backend/cache
BACKEND_STORAGE_DIR=./data/backend/storage
BACKEND_TEMP_DIR=./data/backend/temp

# Celery数据目录
CELERY_BEAT_DATA_DIR=./data/celery/beat

# 前端缓存目录
FRONTEND_CACHE_DIR=./data/frontend/cache
FRONTEND_NEXT_CACHE_DIR=./data/frontend/next_cache

# Minio对象存储目录
MINIO_DATA_DIR=./data/minio
MINIO_DEV_DATA_DIR=./data/minio_dev

# 开发工具数据目录
PGADMIN_DATA_DIR=./data/pgadmin
REDIS_INSIGHT_DATA_DIR=./data/redis_insight

# ==========================================
# 文件存储配置 - 更新为本地目录
# ==========================================
# 上传文件配置
UPLOAD_PATH=./data/backend/uploads
MAX_UPLOAD_SIZE=100MB
ALLOWED_FILE_TYPES=pdf,doc,docx,xls,xlsx,csv,txt,json

# 报告存储配置 (优先使用Minio对象存储)
REPORTS_STORAGE_PATH=minio://autoreport/reports
TEMPLATES_STORAGE_PATH=minio://autoreport/templates
DATA_STORAGE_PATH=minio://autoreport/data

# 本地备份存储路径 (Minio不可用时的fallback)
LOCAL_REPORTS_STORAGE_PATH=./data/backend/storage/reports
LOCAL_TEMPLATES_STORAGE_PATH=./data/backend/storage/templates
LOCAL_DATA_STORAGE_PATH=./data/backend/storage/data

# 临时文件配置
TEMP_PATH=./data/backend/temp
TEMP_FILE_TTL=3600

# ==========================================
# 监控和日志配置 - 更新为本地目录
# ==========================================
# 性能监控
ENABLE_PERFORMANCE_MONITORING=true
PERFORMANCE_LOG_PATH=./data/backend/logs/performance.log
METRICS_COLLECTION_INTERVAL=60

# 日志配置
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s
LOG_FILE_PATH=./data/backend/logs/app.log
LOG_MAX_SIZE=10MB
LOG_BACKUP_COUNT=5

# Agent调用监控
AGENT_MONITORING_ENABLED=true
AGENT_LOG_PATH=./data/backend/logs/agents.log
AGENT_METRICS_ENABLED=true

# ==========================================
# 安全和权限配置
# ==========================================
# CORS配置 - 开发环境宽松配置
ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://0.0.0.0:3000
# 或使用局域网模式 (支持任何局域网IP访问前端)
# ALLOWED_ORIGINS=http://${SERVER_IP:-localhost}:3000,http://localhost:3000,http://127.0.0.1:3000
# 或使用通配符模式 (开发/测试环境，不推荐生产)
# ALLOWED_ORIGINS=*
ALLOWED_METHODS=GET,POST,PUT,DELETE,PATCH,OPTIONS
ALLOWED_HEADERS=Content-Type,Authorization,X-Requested-With,X-Real-IP,X-Forwarded-For

# 请求限制
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW=60
RATE_LIMIT_ENABLED=true

# 用户权限配置
USER_ISOLATION_ENABLED=true
ADMIN_FEATURES_ENABLED=true
MULTI_TENANT_ENABLED=false

# ==========================================
# 开发工具配置
# ==========================================
# 调试配置 - 开发环境
SQLALCHEMY_ECHO=false
SHOW_SQL_QUERIES=false
DEBUG_TOOLBAR_ENABLED=false

# API文档配置
DOCS_URL=/docs
REDOC_URL=/redoc
OPENAPI_URL=/openapi.json

# 热重载配置 - 开发环境
WATCHFILES_FORCE_POLLING=false
AUTO_RELOAD_ENABLED=true

# ==========================================
# 测试配置
# ==========================================
# 测试数据库
TEST_DATABASE_URL=postgresql://testuser:testpass123@localhost:5433/test_autoreport

# 测试Redis
TEST_REDIS_URL=redis://localhost:6379/15

# 测试配置
TESTING_MODE=false
MOCK_EXTERNAL_SERVICES=false
TEST_DATA_RESET=true

# ==========================================
# 健康检查配置
# ==========================================
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10
HEALTH_CHECK_RETRIES=3
HEALTH_CHECK_DATABASE=true
HEALTH_CHECK_REDIS=true
HEALTH_CHECK_EXTERNAL_SERVICES=true
HEALTH_CHECK_REACT_AGENT=true

# ==========================================
# React Agent 智能服务配置
# ==========================================
# 智能占位符服务
INTELLIGENT_PLACEHOLDER_ENABLED=true
PLACEHOLDER_ANALYSIS_TIMEOUT=60
PLACEHOLDER_CACHE_ENABLED=true
PLACEHOLDER_BATCH_PROCESSING=true

# 智能通知服务
INTELLIGENT_NOTIFICATION_ENABLED=true
NOTIFICATION_GENERATION_MODEL=gpt-4-turbo-preview
NOTIFICATION_AI_ENHANCED=true

# 智能模板服务
INTELLIGENT_TEMPLATE_ENABLED=true
TEMPLATE_ANALYSIS_ENABLED=true
SQL_GENERATION_ENABLED=true
TEMPLATE_AI_OPTIMIZATION=true

# ==========================================
# 前端 React Agent UI 配置
# ==========================================
NEXT_PUBLIC_REACT_AGENT_UI=enabled
NEXT_PUBLIC_INTELLIGENT_COMPONENTS=enabled
NEXT_PUBLIC_REALTIME_UPDATES=enabled
NEXT_PUBLIC_WEBSOCKET_RECONNECT_ATTEMPTS=5
NEXT_PUBLIC_WEBSOCKET_RECONNECT_DELAY=1000
NEXT_PUBLIC_AI_ASSISTANT_ENABLED=true

# ==========================================
# Minio对象存储配置
# ==========================================
# 基础Minio配置 - 开发环境默认配置
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=minioadmin123
MINIO_BUCKET_NAME=autoreport
MINIO_REGION=us-east-1
MINIO_API_PORT=9000
MINIO_CONSOLE_PORT=9001

# 开发模式Minio配置 (仅开发时启用)
MINIO_DEV_ROOT_USER=devuser
MINIO_DEV_ROOT_PASSWORD=dev-password-change-in-production
MINIO_DEV_API_PORT=9002
MINIO_DEV_CONSOLE_PORT=9003

# ==========================================
# 默认用户配置
# ==========================================
# 系统管理员默认账户 (首次启动自动创建)
FIRST_SUPERUSER=admin
FIRST_SUPERUSER_EMAIL=admin@autoreportai.com
FIRST_SUPERUSER_PASSWORD=password

# ==========================================
# 数据目录说明
# ==========================================
# Docker会自动创建所需的数据目录，无需手动创建
# 数据将持久化存储在当前目录的 ./data/ 下
# 首次运行docker-compose时，所有目录会自动创建并正确配置权限

# ==========================================
# 生产环境提醒
# ==========================================
# 在生产环境中请确保：
# 1. 更改所有默认密钥和密码
# 2. 设置强密码策略
# 3. 配置适当的CORS设置
# 4. 启用HTTPS
# 5. 配置监控和日志
# 6. 设置React Agent的资源限制
# 7. 配置LLM API密钥的安全存储
# 8. 启用生产级缓存策略
# 9. 确保数据目录权限正确设置
# 10. 配置数据备份策略