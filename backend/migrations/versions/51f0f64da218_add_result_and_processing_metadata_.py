"""Add result and processing_metadata fields to report_history

Revision ID: 51f0f64da218
Revises: aa3b7bd0a07f
Create Date: 2025-08-08 19:34:32.918390

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '51f0f64da218'
down_revision: Union[str, Sequence[str], None] = 'aa3b7bd0a07f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('uq_data_sources_user_slug'), 'data_sources', type_='unique')
    op.add_column('report_history', sa.Column('result', sa.Text(), nullable=True))
    op.add_column('report_history', sa.Column('processing_metadata', sa.JSON(), nullable=True))
    op.alter_column('tasks', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('tasks', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.drop_column('report_history', 'processing_metadata')
    op.drop_column('report_history', 'result')
    op.create_unique_constraint(op.f('uq_data_sources_user_slug'), 'data_sources', ['user_id', 'slug'])
    # ### end Alembic commands ###
