"""add_missing_user_id_fields

Revision ID: 721a708f5fa0
Revises: ab1d30882af3
Create Date: 2025-07-15 18:20:32.034127

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '721a708f5fa0'
down_revision: Union[str, Sequence[str], None] = 'ab1d30882af3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 首先添加可为空的user_id列
    op.add_column('ai_providers', sa.Column('user_id', sa.UUID(), nullable=True))
    op.add_column('report_history', sa.Column('user_id', sa.UUID(), nullable=True))
    
    # 为现有记录设置默认的user_id（使用现有的第一个用户）
    op.execute("""
        UPDATE ai_providers 
        SET user_id = (SELECT id FROM users LIMIT 1)
        WHERE user_id IS NULL
    """)
    
    op.execute("""
        UPDATE report_history 
        SET user_id = (SELECT id FROM users LIMIT 1)
        WHERE user_id IS NULL
    """)
    
    # 然后设置为非空
    op.alter_column('ai_providers', 'user_id', nullable=False)
    op.alter_column('report_history', 'user_id', nullable=False)
    
    # 创建外键约束
    op.create_foreign_key(None, 'ai_providers', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'report_history', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'report_history', type_='foreignkey')
    op.drop_column('report_history', 'user_id')
    op.drop_constraint(None, 'ai_providers', type_='foreignkey')
    op.drop_column('ai_providers', 'user_id')
    # ### end Alembic commands ###
