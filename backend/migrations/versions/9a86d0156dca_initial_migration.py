"""Initial migration

Revision ID: 9a86d0156dca
Revises: 
Create Date: 2025-08-11 17:37:34.445929

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9a86d0156dca'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_full_name'), 'users', ['full_name'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('ai_providers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('provider_name', sa.String(), nullable=False),
    sa.Column('provider_type', sa.Enum('openai', 'azure_openai', 'mock', name='aiprovidertype'), nullable=False),
    sa.Column('api_base_url', sa.String(), nullable=True),
    sa.Column('api_key', sa.String(), nullable=True),
    sa.Column('default_model_name', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ai_providers_id'), 'ai_providers', ['id'], unique=False)
    op.create_index(op.f('ix_ai_providers_provider_name'), 'ai_providers', ['provider_name'], unique=True)
    op.create_table('data_sources',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=True),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.Column('source_type', sa.Enum('sql', 'csv', 'api', 'push', 'doris', name='datasourcetype'), nullable=False),
    sa.Column('connection_string', sa.String(), nullable=True),
    sa.Column('sql_query_type', sa.Enum('single_table', 'multi_table', 'custom_view', name='sqlquerytype'), nullable=True),
    sa.Column('base_query', sa.Text(), nullable=True),
    sa.Column('join_config', sa.JSON(), nullable=True),
    sa.Column('column_mapping', sa.JSON(), nullable=True),
    sa.Column('where_conditions', sa.JSON(), nullable=True),
    sa.Column('wide_table_name', sa.String(), nullable=True),
    sa.Column('wide_table_schema', sa.JSON(), nullable=True),
    sa.Column('api_url', sa.String(), nullable=True),
    sa.Column('api_method', sa.String(), nullable=True),
    sa.Column('api_headers', sa.JSON(), nullable=True),
    sa.Column('api_body', sa.JSON(), nullable=True),
    sa.Column('push_endpoint', sa.String(), nullable=True),
    sa.Column('push_auth_config', sa.JSON(), nullable=True),
    sa.Column('doris_fe_hosts', sa.JSON(), nullable=True),
    sa.Column('doris_be_hosts', sa.JSON(), nullable=True),
    sa.Column('doris_http_port', sa.Integer(), nullable=True),
    sa.Column('doris_query_port', sa.Integer(), nullable=True),
    sa.Column('doris_database', sa.String(), nullable=True),
    sa.Column('doris_username', sa.String(), nullable=True),
    sa.Column('doris_password', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_sync_time', sa.String(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_data_sources_display_name'), 'data_sources', ['display_name'], unique=False)
    op.create_index(op.f('ix_data_sources_name'), 'data_sources', ['name'], unique=True)
    op.create_index(op.f('ix_data_sources_slug'), 'data_sources', ['slug'], unique=False)
    op.create_table('llm_call_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('request_type', sa.String(length=50), nullable=False),
    sa.Column('prompt_template', sa.String(length=100), nullable=False),
    sa.Column('input_data', sa.JSON(), nullable=False),
    sa.Column('response_data', sa.JSON(), nullable=True),
    sa.Column('model_used', sa.String(length=100), nullable=False),
    sa.Column('tokens_used', sa.Integer(), nullable=True),
    sa.Column('processing_time_ms', sa.Integer(), nullable=True),
    sa.Column('cost_estimate', sa.DECIMAL(precision=10, scale=6), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_llm_call_logs_id'), 'llm_call_logs', ['id'], unique=False)
    op.create_table('templates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('template_type', sa.String(length=50), nullable=True),
    sa.Column('original_filename', sa.String(length=255), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_templates_name'), 'templates', ['name'], unique=False)
    op.create_table('user_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('theme', sa.String(length=20), nullable=True),
    sa.Column('email_notifications', sa.Boolean(), nullable=True),
    sa.Column('report_notifications', sa.Boolean(), nullable=True),
    sa.Column('system_notifications', sa.Boolean(), nullable=True),
    sa.Column('default_storage_days', sa.Integer(), nullable=True),
    sa.Column('auto_cleanup_enabled', sa.Boolean(), nullable=True),
    sa.Column('default_report_format', sa.String(length=10), nullable=True),
    sa.Column('default_ai_provider', sa.String(length=100), nullable=True),
    sa.Column('custom_css', sa.Text(), nullable=True),
    sa.Column('dashboard_layout', sa.Text(), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('date_format', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_user_profiles_id'), 'user_profiles', ['id'], unique=False)
    op.create_table('analytics_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('record_id', sa.String(), nullable=False),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('data_source_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['data_source_id'], ['data_sources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_analytics_data_id'), 'analytics_data', ['id'], unique=False)
    op.create_index(op.f('ix_analytics_data_record_id'), 'analytics_data', ['record_id'], unique=False)
    op.create_table('error_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('error_id', sa.String(length=32), nullable=False),
    sa.Column('category', sa.Enum('PARSING_ERROR', 'LLM_ERROR', 'FIELD_MATCHING_ERROR', 'ETL_ERROR', 'CONTENT_GENERATION_ERROR', 'VALIDATION_ERROR', 'SYSTEM_ERROR', name='errorcategoryenum'), nullable=False),
    sa.Column('severity', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='errorseverityenum'), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('placeholder_text', sa.String(length=500), nullable=True),
    sa.Column('placeholder_type', sa.String(length=50), nullable=True),
    sa.Column('placeholder_description', sa.Text(), nullable=True),
    sa.Column('context_before', sa.Text(), nullable=True),
    sa.Column('context_after', sa.Text(), nullable=True),
    sa.Column('data_source_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('stack_trace', sa.Text(), nullable=True),
    sa.Column('additional_data', sa.JSON(), nullable=True),
    sa.Column('resolved', sa.Boolean(), nullable=False),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['data_source_id'], ['data_sources.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_error_logs_error_id'), 'error_logs', ['error_id'], unique=True)
    op.create_index(op.f('ix_error_logs_id'), 'error_logs', ['id'], unique=False)
    op.create_table('etl_jobs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('data_source_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('destination_table_name', sa.String(), nullable=False),
    sa.Column('source_query', sa.Text(), nullable=False),
    sa.Column('transformation_config', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('schedule', sa.String(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['data_source_id'], ['data_sources.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_etl_jobs_destination_table_name'), 'etl_jobs', ['destination_table_name'], unique=False)
    op.create_index(op.f('ix_etl_jobs_name'), 'etl_jobs', ['name'], unique=False)
    op.create_table('field_mapping_cache',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('placeholder_signature', sa.String(length=255), nullable=False),
    sa.Column('data_source_id', sa.UUID(), nullable=False),
    sa.Column('matched_field', sa.String(length=255), nullable=False),
    sa.Column('confidence_score', sa.DECIMAL(precision=3, scale=2), nullable=False),
    sa.Column('transformation_config', sa.JSON(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['data_source_id'], ['data_sources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_field_mapping_cache_id'), 'field_mapping_cache', ['id'], unique=False)
    op.create_index(op.f('ix_field_mapping_cache_placeholder_signature'), 'field_mapping_cache', ['placeholder_signature'], unique=False)
    op.create_table('knowledge_base',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entry_id', sa.String(length=32), nullable=False),
    sa.Column('placeholder_signature', sa.String(length=255), nullable=False),
    sa.Column('successful_mappings', sa.JSON(), nullable=True),
    sa.Column('failed_mappings', sa.JSON(), nullable=True),
    sa.Column('user_corrections', sa.JSON(), nullable=True),
    sa.Column('pattern_analysis', sa.JSON(), nullable=True),
    sa.Column('confidence_metrics', sa.JSON(), nullable=True),
    sa.Column('usage_statistics', sa.JSON(), nullable=True),
    sa.Column('data_source_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['data_source_id'], ['data_sources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_knowledge_base_entry_id'), 'knowledge_base', ['entry_id'], unique=True)
    op.create_index(op.f('ix_knowledge_base_id'), 'knowledge_base', ['id'], unique=False)
    op.create_index(op.f('ix_knowledge_base_placeholder_signature'), 'knowledge_base', ['placeholder_signature'], unique=False)
    op.create_table('learning_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rule_id', sa.String(length=32), nullable=False),
    sa.Column('placeholder_pattern', sa.String(length=500), nullable=False),
    sa.Column('field_mapping', sa.String(length=255), nullable=False),
    sa.Column('confidence_score', sa.DECIMAL(precision=3, scale=2), nullable=False),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('success_count', sa.Integer(), nullable=False),
    sa.Column('success_rate', sa.DECIMAL(precision=3, scale=2), nullable=False),
    sa.Column('created_from_feedback', sa.Boolean(), nullable=False),
    sa.Column('data_source_id', sa.UUID(), nullable=False),
    sa.Column('rule_metadata', sa.JSON(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['data_source_id'], ['data_sources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_learning_rules_id'), 'learning_rules', ['id'], unique=False)
    op.create_index(op.f('ix_learning_rules_rule_id'), 'learning_rules', ['rule_id'], unique=True)
    op.create_table('placeholder_mapping_cache',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('placeholder_signature', sa.String(length=255), nullable=False),
    sa.Column('data_source_id', sa.UUID(), nullable=False),
    sa.Column('matched_field', sa.String(length=255), nullable=False),
    sa.Column('confidence_score', sa.DECIMAL(precision=3, scale=2), nullable=False),
    sa.Column('transformation_config', sa.JSON(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['data_source_id'], ['data_sources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_placeholder_mapping_cache_id'), 'placeholder_mapping_cache', ['id'], unique=False)
    op.create_index(op.f('ix_placeholder_mapping_cache_placeholder_signature'), 'placeholder_mapping_cache', ['placeholder_signature'], unique=True)
    op.create_table('placeholder_processing_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.UUID(), nullable=True),
    sa.Column('placeholder_text', sa.String(length=500), nullable=False),
    sa.Column('placeholder_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('context_info', sa.JSON(), nullable=True),
    sa.Column('llm_understanding', sa.JSON(), nullable=True),
    sa.Column('field_mapping', sa.JSON(), nullable=True),
    sa.Column('processed_value', sa.Text(), nullable=True),
    sa.Column('processing_time_ms', sa.Integer(), nullable=True),
    sa.Column('confidence_score', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['template_id'], ['templates.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_placeholder_processing_history_id'), 'placeholder_processing_history', ['id'], unique=False)
    op.create_table('report_quality_scores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.String(length=255), nullable=False),
    sa.Column('template_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('overall_score', sa.DECIMAL(precision=3, scale=2), nullable=False),
    sa.Column('language_fluency_score', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('data_consistency_score', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('completeness_score', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('accuracy_score', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('formatting_score', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('quality_issues', sa.JSON(), nullable=True),
    sa.Column('improvement_suggestions', sa.JSON(), nullable=True),
    sa.Column('processing_time_ms', sa.Integer(), nullable=True),
    sa.Column('llm_analysis_used', sa.Boolean(), nullable=False),
    sa.Column('manual_review_required', sa.Boolean(), nullable=False),
    sa.Column('reviewer_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['template_id'], ['templates.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_report_quality_scores_id'), 'report_quality_scores', ['id'], unique=False)
    op.create_index(op.f('ix_report_quality_scores_report_id'), 'report_quality_scores', ['report_id'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('schedule', sa.String(), nullable=True),
    sa.Column('recipients', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('data_source_id', sa.UUID(), nullable=False),
    sa.Column('template_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['data_source_id'], ['data_sources.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['templates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=False)
    op.create_index(op.f('ix_tasks_name'), 'tasks', ['name'], unique=False)
    op.create_table('report_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('result', sa.Text(), nullable=True),
    sa.Column('processing_metadata', sa.JSON(), nullable=True),
    sa.Column('generated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_report_history_id'), 'report_history', ['id'], unique=False)
    op.create_table('user_feedbacks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('feedback_id', sa.String(length=32), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('error_id', sa.String(length=32), nullable=True),
    sa.Column('feedback_type', sa.Enum('CORRECTION', 'IMPROVEMENT', 'VALIDATION', 'COMPLAINT', name='feedbacktypeenum'), nullable=False),
    sa.Column('placeholder_text', sa.String(length=500), nullable=False),
    sa.Column('original_result', sa.Text(), nullable=False),
    sa.Column('corrected_result', sa.Text(), nullable=True),
    sa.Column('suggested_field', sa.String(length=255), nullable=True),
    sa.Column('confidence_rating', sa.Integer(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('processed', sa.Boolean(), nullable=False),
    sa.Column('processing_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['error_id'], ['error_logs.error_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_feedbacks_feedback_id'), 'user_feedbacks', ['feedback_id'], unique=True)
    op.create_index(op.f('ix_user_feedbacks_id'), 'user_feedbacks', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_feedbacks_id'), table_name='user_feedbacks')
    op.drop_index(op.f('ix_user_feedbacks_feedback_id'), table_name='user_feedbacks')
    op.drop_table('user_feedbacks')
    op.drop_index(op.f('ix_report_history_id'), table_name='report_history')
    op.drop_table('report_history')
    op.drop_index(op.f('ix_tasks_name'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_id'), table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_report_quality_scores_report_id'), table_name='report_quality_scores')
    op.drop_index(op.f('ix_report_quality_scores_id'), table_name='report_quality_scores')
    op.drop_table('report_quality_scores')
    op.drop_index(op.f('ix_placeholder_processing_history_id'), table_name='placeholder_processing_history')
    op.drop_table('placeholder_processing_history')
    op.drop_index(op.f('ix_placeholder_mapping_cache_placeholder_signature'), table_name='placeholder_mapping_cache')
    op.drop_index(op.f('ix_placeholder_mapping_cache_id'), table_name='placeholder_mapping_cache')
    op.drop_table('placeholder_mapping_cache')
    op.drop_index(op.f('ix_learning_rules_rule_id'), table_name='learning_rules')
    op.drop_index(op.f('ix_learning_rules_id'), table_name='learning_rules')
    op.drop_table('learning_rules')
    op.drop_index(op.f('ix_knowledge_base_placeholder_signature'), table_name='knowledge_base')
    op.drop_index(op.f('ix_knowledge_base_id'), table_name='knowledge_base')
    op.drop_index(op.f('ix_knowledge_base_entry_id'), table_name='knowledge_base')
    op.drop_table('knowledge_base')
    op.drop_index(op.f('ix_field_mapping_cache_placeholder_signature'), table_name='field_mapping_cache')
    op.drop_index(op.f('ix_field_mapping_cache_id'), table_name='field_mapping_cache')
    op.drop_table('field_mapping_cache')
    op.drop_index(op.f('ix_etl_jobs_name'), table_name='etl_jobs')
    op.drop_index(op.f('ix_etl_jobs_destination_table_name'), table_name='etl_jobs')
    op.drop_table('etl_jobs')
    op.drop_index(op.f('ix_error_logs_id'), table_name='error_logs')
    op.drop_index(op.f('ix_error_logs_error_id'), table_name='error_logs')
    op.drop_table('error_logs')
    op.drop_index(op.f('ix_analytics_data_record_id'), table_name='analytics_data')
    op.drop_index(op.f('ix_analytics_data_id'), table_name='analytics_data')
    op.drop_table('analytics_data')
    op.drop_index(op.f('ix_user_profiles_id'), table_name='user_profiles')
    op.drop_table('user_profiles')
    op.drop_index(op.f('ix_templates_name'), table_name='templates')
    op.drop_table('templates')
    op.drop_index(op.f('ix_llm_call_logs_id'), table_name='llm_call_logs')
    op.drop_table('llm_call_logs')
    op.drop_index(op.f('ix_data_sources_slug'), table_name='data_sources')
    op.drop_index(op.f('ix_data_sources_name'), table_name='data_sources')
    op.drop_index(op.f('ix_data_sources_display_name'), table_name='data_sources')
    op.drop_table('data_sources')
    op.drop_index(op.f('ix_ai_providers_provider_name'), table_name='ai_providers')
    op.drop_index(op.f('ix_ai_providers_id'), table_name='ai_providers')
    op.drop_table('ai_providers')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_full_name'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
