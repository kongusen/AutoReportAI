[pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Python path configuration
pythonpath = . app

# Test execution options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=app
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    --durations=10
    --maxfail=5

# Test markers
markers =
    unit: Unit tests - fast tests that test individual components in isolation
    integration: Integration tests - tests that verify component interactions
    e2e: End-to-end tests - tests that verify complete user workflows
    slow: Slow running tests (deselect with '-m "not slow"')
    database: Tests that require database connection
    external: Tests that require external services
    api: Tests that test API endpoints
    auth: Tests related to authentication and authorization
    crud: Tests for CRUD operations
    services: Tests for service layer components
    models: Tests for data models
    schemas: Tests for Pydantic schemas
    asyncio: Asynchronous tests that use asyncio
    performance: Performance benchmark tests

# Warning filters
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning
    ignore::pytest.PytestUnraisableExceptionWarning

# Minimum version requirements
minversion = 7.0

# Test environment variables are set in conftest.py

# Asyncio configuration handled by pytest-asyncio plugin

# Coverage configuration (additional to pyproject.toml)
# This ensures pytest-cov works even if pyproject.toml is not present
[coverage:run]
source = app
omit = 
    */tests/*
    */migrations/*
    */venv/*
    */__pycache__/*
    */conftest.py
    app/initial_data.py
branch = true

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
show_missing = true
precision = 2